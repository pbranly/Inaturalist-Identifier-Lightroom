-- Get_Version_Github.lua
--[[
============================================================
Functional Description:
------------------------------------------------------------
This module handles version management for the iNaturalist Lightroom plugin.
It retrieves the latest release tag from GitHub (using curl) and compares it with the local plugin version.

Modules/Dependencies:
------------------------------------------------------------
- PluginVersion.lua
- Logger.lua
============================================================
--]]

local PluginVersion = require("PluginVersion")
local logger        = require("Logger")

local M = {}

-- Helper: convert version table to number for comparison
local function toNumber(v)
    return v.major * 1000000 + v.minor * 10000 + v.revision * 100 + v.build
end

-- Parse tag like "0.1.5" into version table
function M.parseTag(tag)
    if not tag then return nil end
    local major, minor, revision = tag:match("(%d+)%.(%d+)%.(%d+)")
    if not major then return nil end
    return {
        major = tonumber(major),
        minor = tonumber(minor),
        revision = tonumber(revision),
        build = 0
    }
end

-- Compare remote tag with local version
function M.isNewerThanLocal(tag)
    local remote = M.parseTag(tag)
    if not remote then return false end
    return toNumber(remote) > toNumber(PluginVersion)
end

function M.isOlderThanLocal(tag)
    local remote = M.parseTag(tag)
    if not remote then return false end
    return toNumber(remote) < toNumber(PluginVersion)
end

function M.isSameAsLocal(tag)
    local remote = M.parseTag(tag)
    if not remote then return false end
    return toNumber(remote) == toNumber(PluginVersion)
end

function M.getLocalVersionString()
    local v = PluginVersion
    return string.format("%d.%d.%d.%d", v.major, v.minor, v.revision, v.build)
end

function M.getLocalVersionFormatted()
    return "Current plugin version: " .. M.getLocalVersionString()
end

-- Synchronous fetch of latest GitHub release using curl
function M.getLatestTag()
    local url = "https://api.github.com/repos/pbranly/Inaturalist-Identifier-Lightroom/releases/latest"
    local handle = io.popen('curl -s "' .. url .. '"')
    local result = handle:read("*a")
    handle:close()

    if not result or result == "" then
        logger.logMessage("[GitHub] Unable to fetch latest release via curl")
        return nil, nil
    end

    local tag = result:match('"tag_name"%s*:%s*"([^"]+)"')
    local html_url = result:match('"html_url"%s*:%s*"([^"]+)"')

    if tag and html_url then
        logger.logMessage("[GitHub] Latest release fetched: " .. tag)
        return tag, html_url
    else
        logger.logMessage("[GitHub] Failed to parse GitHub release JSON")
        return nil, nil
    end
end

return M
